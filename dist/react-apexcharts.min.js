import ApexCharts from"apexcharts";import React,{Component}from"react";import PropTypes from"prop-types";var _extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t};function _objectWithoutProperties(t,e){var r={};for(var s in t)e.indexOf(s)>=0||Object.prototype.hasOwnProperty.call(t,s)&&(r[s]=t[s]);return r}class Charts extends Component{constructor(t){super(t),React.createRef?this.chartRef=React.createRef():this.setRef=(t=>this.chartRef=t),this.chart=null}render(){const t=_objectWithoutProperties(this.props,["type","width","height","series","options"]);return React.createElement("div",_extends({ref:React.createRef?this.chartRef:this.setRef},t))}componentDidMount(){const t=React.createRef?this.chartRef.current:this.chartRef;this.chart=new ApexCharts(t,this.getConfig()),this.chart.render()}getConfig(){const{type:t,height:e,width:r,series:s,options:i}=this.props,o={chart:{type:t,height:e,width:r},series:s};return ApexCharts.merge(i,o)}componentDidUpdate(t){if(!this.chart)return null;const{options:e,series:r}=this.props,s=JSON.stringify(t.options),i=JSON.stringify(t.series),o=JSON.stringify(e),h=JSON.stringify(r);s===o&&i===h||(i===h?this.chart.updateOptions(this.getConfig()):s===o?this.chart.updateSeries(r):this.chart.updateOptions(this.getConfig()))}componentWillUnmount(){this.chart&&"function"==typeof this.chart.destroy&&this.chart.destroy()}}Charts.propTypes={type:PropTypes.string.isRequired,width:PropTypes.any,height:PropTypes.any,series:PropTypes.array.isRequired,options:PropTypes.object.isRequired},Charts.defaultProps={type:"line",width:"100%",height:"auto"};export default Charts;
